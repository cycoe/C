** Chapter 5
*** 1
int divide int get an int, and the variable b is a common mistake that you may
make. You divide an int with an int, but assign it to a float. There is an
implicit type conversion.
#+begin_src C
  #include <stdio.h>

  int main(int argc, char *argv[])
  {
    float a, b;
    a = (float) (25 / 10);
    b = (25 / 10);
    printf("a is %f, b is %f\n", a, b);
    return 0;
  }
#+end_src
#+RESULTS:
| a is 2.000000 | b is 2.000000 |
*** 2
Caution about the side effect!
+ We cannot figure out the order of the function calling in an expression. So
  when there is a side effect, the answer will out of our control
+ Tell the difference between func1 and func2. When we declare a static variable
  in a function, then call this function several times, the static variable will
  only be initiated one time. And the assignment will also only be called one
  time.
#+begin_src C
  #include <stdio.h>

  int func1(void) {
    static int a;
    a = 1;
    return ++a;
  }

  int func2(void) {
    static int a = 1;
    return ++a;
  }

  int main(int argc, char *argv[])
  {
    int answer;
    answer = func1() - func1() * func1();
    printf("func1 is %d\n", answer);
    answer = func2() - func2() * func2();
    printf("func2 is %d\n", answer);
    return 0;
  }
#+end_src
#+RESULTS:
| func1 | is |  -2 |
| func2 | is | -10 |
*** 5
#+begin_src C
  int main(int argc, char *argv[])
  {
    unsigned year = 2100;
    unsigned leap_year = !(year % 400) || (!(year % 4) && (year % 100));
    printf("%u is %sa leap year!\n", year, leap_year? "": "not ");
    return 0;
  }
#+end_src
#+RESULTS:
: 2100 is not a leap year!
*** 9
**** Search the first specific charactor in a string
#+begin_src C
  #include <stdio.h>
  #include <string.h>

  int main(int argc, char *argv[])
  {
    char string[20] = "Hello there.";
    char *search = strchr(string, 'h');
    if (search)
      printf("The index of first 'h' is %d\n", search - string);
    return 0;
  }
#+end_src
#+RESULTS:
: The index of first 'h' is 7
**** Search the first charactor of a group in a string 
#+begin_src C
  #include <stdio.h>
  #include <string.h>

  int main(int argc, char *argv[])
  {
    char string[20] = "Hello there.";
    char *search = strpbrk(string, "aeiou");
    if (search)
      printf("The index of first 'aeiou' is %d\n", search - string);
    return 0;
  }
#+end_src
#+RESULTS:
: The index of first 'aeiou' is 1
**** Search a substring
#+begin_src C
  #include <stdio.h>
  #include <string.h>

  int main(int argc, char *argv[])
  {
    char string[20] = "Hello there.";
    char *search = strstr(string, "there");
    if (search)
      printf("The index of substring 'there' is %d\n", search - string);
    return 0;
  }
#+end_src
#+RESULTS:
: The index of substring 'there' is 6
*** 10
#+begin_src C
  #include <stdio.h>

  struct {
    // 此处使用 int 会出问题，应使用无符号类型
    int a: 2;
    unsigned b: 2;
  } x;

  int main(int argc, char *argv[])
  {
    x.a = 1;
    x.a += 1;
    printf("%p\n", (int*) x.a);
    x.b = 1;
    x.b += 1;
    printf("%p\n", (int*) x.b);
    return 0;
  }
#+end_src
#+RESULTS:
| 0xfffffffffffffffe |
|                0x2 |
